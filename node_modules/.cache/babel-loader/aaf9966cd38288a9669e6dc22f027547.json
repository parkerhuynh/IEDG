{"ast":null,"code":"var _jsxFileName = \"/home/parker/IEDG/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Container, Row, Form, Col } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    transcript,\n    finalTranscript,\n    resetTranscript\n  } = useSpeechRecognition();\n  const [text, setText] = useState(\"\");\n  const [cdql, setcdql] = useState(\"\");\n  const [results, setResults] = useState(\"\");\n  useEffect(() => {\n    SpeechRecognition.startListening({\n      continuous: true\n    });\n  }, []);\n  useEffect(() => {\n    if (transcript.includes(\"reset\")) {\n      resetTranscript();\n    } else {\n      setText(transcript);\n    }\n  }, [transcript, finalTranscript, resetTranscript]);\n  useEffect(() => {\n    axios.post('/convert_text_to_cdql', {\n      \"text\": finalTranscript\n    }).then(res => {\n      setcdql(res[\"data\"][\"cdql\"]);\n    });\n  }, [finalTranscript]);\n  useEffect(() => {\n    axios.post('/convert_cdql_to_results', {\n      \"cdql\": cdql\n    }).then(res => {\n      setResults(res[\"data\"][\"results\"]);\n    });\n  }, [cdql]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: 'banner.png'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: \"2\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Label, {\n            style: {\n              height: '100px'\n            },\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: \"2\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Label, {\n            style: {\n              height: '100px'\n            },\n            children: \"CDQL query\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: cdql\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: \"2\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Label, {\n            style: {\n              height: '100px'\n            },\n            children: \"Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: results\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bDXNe7v4C++QWPWVRvoJGApNUOg=\", false, function () {\n  return [useSpeechRecognition];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/parker/IEDG/src/App.js"],"names":["axios","useEffect","useState","Container","Row","Form","Col","SpeechRecognition","useSpeechRecognition","App","transcript","finalTranscript","resetTranscript","text","setText","cdql","setcdql","results","setResults","startListening","continuous","includes","post","then","res","height"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,GAA/B,QAA0C,iBAA1C;AACA,OAAO,sCAAP;AACA,OAAOC,iBAAP,IAA4BC,oBAA5B,QAAwD,0BAAxD;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM;AACJC,IAAAA,UADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA;AAHI,MAIFJ,oBAAoB,EAJxB;AAKA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,iBAAiB,CAACY,cAAlB,CAAiC;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAjC;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,UAAU,CAACW,QAAX,CAAoB,OAApB,CAAJ,EAAkC;AAChCT,MAAAA,eAAe;AAChB,KAFD,MAEO;AACLE,MAAAA,OAAO,CAACJ,UAAD,CAAP;AACD;AACF,GANQ,EAMN,CAACA,UAAD,EAAaC,eAAb,EAA8BC,eAA9B,CANM,CAAT;AAQAX,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,KAAK,CAACsB,IAAN,CAAW,uBAAX,EAAoC;AAAC,cAAQX;AAAT,KAApC,EAA+DY,IAA/D,CAAoEC,GAAG,IAAI;AACzER,MAAAA,OAAO,CAACQ,GAAG,CAAC,MAAD,CAAH,CAAY,MAAZ,CAAD,CAAP;AACD,KAFD;AAGD,GAJQ,EAIN,CAACb,eAAD,CAJM,CAAT;AAMAV,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,KAAK,CAACsB,IAAN,CAAW,0BAAX,EAAuC;AAAC,cAAQP;AAAT,KAAvC,EAAuDQ,IAAvD,CAA4DC,GAAG,IAAI;AACjEN,MAAAA,UAAU,CAACM,GAAG,CAAC,MAAD,CAAH,CAAY,SAAZ,CAAD,CAAV;AACD,KAFD;AAGD,GAJQ,EAIN,CAACT,IAAD,CAJM,CAAT;AAMA,sBACE,QAAC,SAAD;AAAA,4BACE;AAAA,6BACE;AAAM,QAAA,GAAG,EAAE;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA,+BACE,QAAC,IAAD;AAAA,iCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,KAAK,EAAE;AAAEU,cAAAA,MAAM,EAAE;AAAV,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,GAAD;AAAA,+BACE,QAAC,IAAD;AAAA,iCACE,QAAC,IAAD,CAAM,KAAN;AAAA,sBAAaZ;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAgBE,QAAC,GAAD;AAAA,8BACA,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA,+BACI,QAAC,IAAD;AAAA,iCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,KAAK,EAAE;AAAEY,cAAAA,MAAM,EAAE;AAAV,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAME,QAAC,GAAD;AAAA,+BACE,QAAC,IAAD;AAAA,iCACE,QAAC,IAAD,CAAM,KAAN;AAAA,sBAAaV;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,eA4BE,QAAC,GAAD;AAAA,8BACA,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA,+BACI,QAAC,IAAD;AAAA,iCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,KAAK,EAAE;AAAEU,cAAAA,MAAM,EAAE;AAAV,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAME,QAAC,GAAD;AAAA,+BACE,QAAC,IAAD;AAAA,iCACE,QAAC,IAAD,CAAM,KAAN;AAAA,sBAAaR;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;GA9EQR,G;UAKHD,oB;;;KALGC,G;AAgFT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Container, Row, Form, Col } from \"react-bootstrap\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\n\n\nfunction App() {\n  const {\n    transcript,\n    finalTranscript,\n    resetTranscript,\n  } = useSpeechRecognition()\n  const [text, setText] = useState(\"\")\n  const [cdql, setcdql] = useState(\"\")\n  const [results, setResults] = useState(\"\")\n\n  useEffect(() => {\n    SpeechRecognition.startListening({continuous: true})\n  }, [])\n\n  useEffect(() => {\n    if (transcript.includes(\"reset\")) {\n      resetTranscript()\n    } else {\n      setText(transcript)\n    }\n  }, [transcript, finalTranscript, resetTranscript])\n\n  useEffect(() => {\n    axios.post('/convert_text_to_cdql', {\"text\": finalTranscript}).then(res => {\n      setcdql(res[\"data\"][\"cdql\"])\n    });\n  }, [finalTranscript])\n\n  useEffect(() => {\n    axios.post('/convert_cdql_to_results', {\"cdql\": cdql}).then(res => {\n      setResults(res[\"data\"][\"results\"])\n    });\n  }, [cdql])\n\n  return (\n    <Container>\n      <div>\n        <img  src={'banner.png'} />\n      </div>\n      <Row>\n        <Col xs=\"2\">\n          <Form>\n            <Form.Label style={{ height: '100px' }}>Text</Form.Label>\n          </Form>\n        </Col>\n        <Col>\n          <Form>\n            <Form.Label>{text}</Form.Label>\n          </Form>\n        </Col>\n      </Row>\n      <Row>\n      <Col xs=\"2\">\n          <Form>\n            <Form.Label style={{ height: '100px' }}>CDQL query</Form.Label>\n          </Form>\n        </Col>\n        <Col>\n          <Form>\n            <Form.Label>{cdql}</Form.Label>\n          </Form>\n        </Col>\n      </Row>\n      <Row>\n      <Col xs=\"2\">\n          <Form>\n            <Form.Label style={{ height: '100px' }}>Results</Form.Label>\n          </Form>\n        </Col>\n        <Col>\n          <Form>\n            <Form.Label>{results}</Form.Label>\n          </Form>\n        </Col>\n      </Row>\n      \n    </Container>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}